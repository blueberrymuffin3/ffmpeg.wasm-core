name: FFmpeg.wasm
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 
      - n4.3.1-wasm
    tags:
      - v*

env:
  PUBLISH_PATH: wasm
  EM_VERSION: 2.0.8
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  linux-build_with_docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Build FFMpeg
        shell: bash
        run: |
          docker system prune -f  # fix `Too many levels of symbolic links` error
          bash build-with-docker.sh
      - uses: actions/upload-artifact@master
        with:
          name: ffmpeg-core
          path: wasm/dist
      - uses: actions/setup-node@v3
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@blueberrymuffin3'
      - run: npm ci
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        working-directory: ${{ env.PUBLISH_PATH }}
      - run: npm publish --access public
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        working-directory: ${{ env.PUBLISH_PATH }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  # Disable macos build due to there is no ldconfig command
  # during freetype2 build.
  # macos-build:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #         submodules: recursive
  #     - name: Setup cache
  #       id: cache-system-libraries
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{env.EM_CACHE_FOLDER}}
  #         key: ${{env.EM_VERSION}}-${{ runner.os }}
  #     - uses: mymindstorm/setup-emsdk@v6
  #       with:
  #         version: ${{env.EM_VERSION}}
  #         actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
  #     - name: Build FFMpeg
  #       shell: bash
  #       run: |
  #         export PATH=$PATH:$PWD/emsdk-cache/emsdk-master/upstream/bin
  #         bash build.sh
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: ffmpeg-core-macos
  #         path: wasm/dist
  # Not working with error messsage:
  #   C:\ProgramData\Chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32\bin\ar.exe: libavfilter/vsink_null: No such file or directory
  # windows-build:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Build FFMpeg
  #       shell: bash
  #       run: |
  #         bash build.sh
